{
  "name": "auth",
  "permissions": "NONE",
  "restriction": "1",
  "_id": "LUTGO",
  "actions": [
    {
      "filename": "./resources/keys.json",
      "storage": "1",
      "varName2": "readKeys",
      "name": "Read File"
    },
    {
      "message": "0",
      "varName": "",
      "info": "0",
      "ParamN": "1",
      "separator": "",
      "storage": "1",
      "varName2": "typedKey",
      "name": "Store Message Params"
    },
    {
      "condition": "0",
      "comparison": "0",
      "value": "1",
      "iftrue": "3",
      "iftrueVal": "3",
      "iffalse": "0",
      "iffalseVal": "",
      "name": "Check Parameters"
    },
    {
      "comment": "Reads the local data and checks if the command only had 1 parameter",
      "color": "#00ff00",
      "name": "Comment"
    },
    {
      "channel": "0",
      "varName": "",
      "message": "Please use only one parameter when using this command.",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "name": "End Action Sequence"
    },
    {
      "storage": "1",
      "varName": "typedKey",
      "conversion": "2",
      "storage2": "1",
      "varName2": "typedKeyString",
      "name": "Convert Variable"
    },
    {
      "comment": "Converts the typed parameter into a string",
      "color": "#00ff00",
      "name": "Comment"
    },
    {
      "behavior": "0",
      "interpretation": "0",
      "code": "const readKeys = tempVars(\"readKeys\")\nconst list = readKeys.split(',')\nthis.storeValue(list, 1, 'codeList', cache)",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    },
    {
      "comment": "Creates an array made out of the string of keys read in the beggining, separated by commas (',')",
      "color": "#00ff00",
      "name": "Comment"
    },
    {
      "list": "7",
      "varName": "codeList",
      "item": "${tempVars(\"typedKeyString\")}",
      "storage": "1",
      "varName2": "arrayPosition",
      "name": "Find Item in List"
    },
    {
      "storage": "1",
      "varName": "arrayPosition",
      "conversion": "0",
      "storage2": "1",
      "varName2": "arrayPositionInt",
      "name": "Convert Variable"
    },
    {
      "comment": "#11 returns the position of the key, we then convert it to an Int to avoid any errors (0 is NaN)",
      "color": "#00ff00",
      "name": "Comment"
    },
    {
      "storage": "1",
      "varName": "arrayPositionInt",
      "comparison": "0",
      "iftrue": "3",
      "iftrueVal": "3",
      "iffalse": "0",
      "iffalseVal": "",
      "name": "Check Variable Type"
    },
    {
      "comment": "If the position returned is a valid number and not NaN or undefined (nonexistent), the bot will proceed",
      "color": "#00ff00",
      "name": "Comment"
    },
    {
      "channel": "0",
      "varName": "",
      "message": "This key is not valid.",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "name": "End Action Sequence"
    },
    {
      "info": "1",
      "find": "AuthRole",
      "storage": "1",
      "varName": "Role",
      "name": "Find Role"
    },
    {
      "member": "1",
      "varName": "",
      "role": "3",
      "varName2": "Role",
      "iftrue": "0",
      "iftrueVal": "",
      "iffalse": "3",
      "iffalseVal": "5",
      "name": "Check If Member has Role"
    },
    {
      "comment": "Checking if the user already has the role",
      "color": "#00ff00",
      "name": "Comment"
    },
    {
      "channel": "0",
      "varName": "",
      "message": "You are already authorized!",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "storage": "0",
      "varName": "",
      "name": "Delete Message"
    },
    {
      "comment": "Deletes the key from the chat so no one will use it, since it wasn't used",
      "color": "#00ff00",
      "name": "Comment"
    },
    {
      "name": "End Action Sequence"
    },
    {
      "channel": "0",
      "varName": "",
      "message": "Key used successfully.",
      "storage": "0",
      "varName2": "",
      "name": "Send Message"
    },
    {
      "member": "1",
      "varName2": "",
      "role": "3",
      "varName": "Role",
      "name": "Add Member Role"
    },
    {
      "comment": "Gives the role to the command author",
      "color": "#00ff00",
      "name": "Comment"
    },
    {
      "behavior": "0",
      "interpretation": "0",
      "code": "var arr = tempVars('codeList')\n\ndelete arr[tempVars(\"arrayPositionInt\")]",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    },
    {
      "comment": "Deletes the used key from the array (It's going to leave 2 commas together, I'm sorry.",
      "color": "#00ff00",
      "name": "Comment"
    },
    {
      "comment": "It doesn't interfere in any way, it just looks worse when you do the authDisplay)",
      "color": "#00ff00",
      "name": "Comment"
    },
    {
      "input": "${tempVars(\"codeList\")}",
      "format": ".json",
      "filename": "keys",
      "filepath": "./resources",
      "filetask": "1",
      "name": "File Control"
    },
    {
      "comment": "Saves the updated list of keys back to the local file",
      "color": "#00ff00",
      "name": "Comment"
    }
  ]
}